Big O Notation
The notation is used to describe the time complexity ands space complexity of algorithms.

a = [1,2,3, .... 1000]

f1(a) => a [0] + 1 - O(1) Constant Time
f2(a) => sum(a) - O(N) Linear Time
f3(a) => pair(a) //[1,1] [1,2] [1,3] [2,1] [2,2] [2,3] [3,1] [3,2] [3,3] - O(N^2)

Examples of common complexities and their Big O Notations ordered from fastest to slowest

- Constant: O(1)
- Logarithmc: O(log(N))
- Linear: O(N)
- Log-Linear: O(N log(N))
- Quadratic: O(N^2)
- Cubic: O(N^3)
- Exponential: O(2^N)
- Factorial: O(n!)



Logarithm